{"version":3,"file":"app~33cc77b3.bundle.js","mappings":";mZACA,knGAAAA,GAAA,wBAAAA,EAAA,sBAAAA,GAAA,iBAAAA,GAAA,ssDAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,4bAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,yhBAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,qGAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,uZAAAA,EAAA,EAAAA,EAAA,SAAAA,IAAA,SAAAA,GAAA,+GAwCA,QArCS,WACP,WAAYC,IAJd,4FAI2B,SACvBC,KAAKC,SAAWF,CAClB,CANF,UAMG,EA+BA,OArCH,EAMG,EANH,EAMG,0BANH,EAMG,UAED,wFAE0B,OADlBG,EAAMC,EAAAA,EAAAA,6BACNC,EAAOC,EAAAA,EAAOH,GAAI,kBAEUE,EAAKE,SAAQ,OAAtB,OAAvBN,KAAKC,SAASM,UAAY,EAAH,cACjBH,EAAKI,cAAa,yDAItBC,EADE,gBAAiBC,UACJ,iBAEA,EAAH,GAEdV,KAAKC,SAASM,UAAY,wMAAH,QAOlBI,EAAAA,EAAAA,GAAcF,GAAa,qCAE9B,QAEoBG,SAASC,cAAc,cAC/BC,iBAAiB,SAAS,SAACC,GACzCA,EAAMC,iBACNJ,SAASC,cAAc,gBAAgBI,OACzC,IAAG,yDA9BJ,EANH,8KAqCG,8CArCH,uEAqCG,EAlCM,4SCHT,knGAAAnB,GAAA,wBAAAA,EAAA,sBAAAA,GAAA,iBAAAA,GAAA,ssDAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,4bAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,yhBAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,qGAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,kkBAGA,IAAQoB,EAAuDC,EAAAA,EAAAA,cAAxCC,EAAwCD,EAAAA,EAAAA,iBAAtBE,EAAsBF,EAAAA,EAAAA,kBAEzDG,GAAYC,EAAAA,EAAAA,IAAOL,EAAeE,EAAkB,CACxDI,QAAO,SAACC,GACNA,EAASC,kBAAkBL,EAAmB,CAAEM,QAAS,MAC3D,IA2BF,QAxB2B,CACnBC,cAAa,SAACC,GAAI,oGACjBA,EAAI,CAAF,gEAIOP,EAAS,uCAAEQ,IAAIT,EAAmBQ,IAAE,0CAL5B,EAMxB,EACME,kBAAiB,WAAG,iHACVT,EAAS,uCAAEU,OAAOX,IAAiB,0CADzB,EAE1B,EACMY,cAAa,SAACC,GAAY,oGAEzBA,EAAWC,eAAe,MAAO,CAAF,gEAItBb,EAAS,uCAAEc,IAAIf,EAAmBa,IAAU,0CAN5B,EAOhC,EACMG,iBAAgB,SAACR,GAAI,iHACXP,EAAS,8CAASD,EAAmBQ,IAAE,0CAD5B,EAE3B,gDCzBF,QANqB,CACnBS,YAAa,GAAF,OAAKnB,EAAAA,EAAAA,SAAe,QAC/BoB,OAAQ,GAAF,OAAKpB,EAAAA,EAAAA,SAAe,UAC1BqB,OAAQ,SAACX,GAAE,gBAAQV,EAAAA,EAAAA,SAAe,kBAAUU,EAAE,sPCJhD,45NAyCA,QAxCyB,yBADzB,4FACyB,SADzB,QAyBG,EAnBA,EALsB,EAqCtB,OAtCH,EACyB,OADzB,EACyB,yCACvB,sGACyBY,MAAMC,EAAAA,aAAyB,OAAxC,OAARC,EAAW,EAAH,cACaA,EAASC,OAAM,OAAxB,OAAZC,EAAe,EAAH,uBACXA,EAAaC,aAAW,2CAChC,0FAED,6FAAgD,OAAhBjB,EAAE,EAAFA,GAAIkB,EAAI,EAAJA,KAAMC,EAAM,EAANA,OAAM,kBAErBP,MAAMC,EAAAA,OAAqB,CAChDO,OAAQ,OACRC,QAAS,CACP,eAAgB,oBAElBC,KAAMC,KAAKC,UAAU,CAAExB,GAAAA,EAAIkB,KAAAA,EAAMC,OAAAA,MACjC,OANY,OAARL,EAAW,EAAH,cAOaA,EAASC,OAAM,OAAxB,OAAZC,EAAe,EAAH,uBACXA,GAAY,uCAEf,gBAAiBnC,WAAS,0CACrB,+CAA8C,iGAI1D,2FAED,WAA8BmB,GAAE,kGAELY,MAAMC,EAAAA,OAAoBb,GAAK,CAAEyB,MAAO,aAAa,OAA9D,OAARX,EAAW,EAAH,cACaA,EAASC,OAAM,OAAxB,OAAZC,EAAe,EAAH,uBACXA,GAAY,uCAEf,gBAAiBnC,WAAS,0CACrB,+CAA8C,iGAI1D,+CAtCH,6DAsCG,EArCsB,mCCQzB,QAVe,CACb6C,SAAU,uCACVC,qBAAsB,oDACtBC,sBAAuB,qDACvBC,qBAAsB,oDACtBxC,cAAe,8BACfE,iBAAkB,EAClBC,kBAAmB,+SCNrB,mjNAiBA,QAhBgB,eADhB,EACgB,GADhB,EACgB,UAAG,uFACX,kBAAmBsC,UAAS,gBAC2B,OAA3DC,QAAQC,IAAI,+CAA+C,0BAIP,OAAhDC,EAAK,IAAIC,EAAAA,GAAsB,kBAAiB,kBAG9CD,EAAGE,WAAU,OACnBJ,QAAQC,IAAI,6BAA6B,kDAEzCD,QAAQC,IAAI,oCAAqC,EAAF,IAAS,yDAb5D,+KAeC,kBAde","sources":["webpack://restaurant-apps/./src/scripts/app.js","webpack://restaurant-apps/./src/scripts/data/liked-restaurant-idb.js","webpack://restaurant-apps/./src/scripts/globals/api-endpoint.js","webpack://restaurant-apps/./src/scripts/data/restaurantapi-source.js","webpack://restaurant-apps/./src/scripts/globals/config.js","webpack://restaurant-apps/./src/scripts/helpers/sw-register.js"],"sourcesContent":["import UrlParser from './routes/url-parser';\r\nimport routes from './routes/routes';\r\nimport { errorTemplate } from './views/templates/error-template';\r\n\r\nclass App {\r\n  constructor(mainElement) {\r\n    this._content = mainElement;\r\n  }\r\n\r\n  async renderPage() {\r\n    const url = UrlParser.parseActiveUrlWithCombiner();\r\n    const page = routes[url];\r\n    try {\r\n      this._content.innerHTML = await page.render();\r\n      await page.afterRender();\r\n    } catch (error) {\r\n      let errorMessage;\r\n      if (error instanceof TypeError) {\r\n        errorMessage = 'Page not found';\r\n      } else {\r\n        errorMessage = error;\r\n      }\r\n      this._content.innerHTML = `\r\n      <header-bar></header-bar>\r\n      <main tabindex=\"0\" id=\"pageContent\">\r\n        <section\r\n          id=\"restaurant-list\"\r\n          class=\"restaurant-list\"\r\n          tabindex=\"0\"\r\n        >${errorTemplate(errorMessage)}</section>\r\n      </main>\r\n      `;\r\n    }\r\n    const skipLinkElement = document.querySelector('.skip-link');\r\n    skipLinkElement.addEventListener('click', (event) => {\r\n      event.preventDefault();\r\n      document.querySelector('#pageContent').focus();\r\n    });\r\n  }\r\n}\r\n\r\nexport default App;\r\n","/* eslint-disable consistent-return */\r\nimport { openDB } from 'idb';\r\nimport CONFIG from '../globals/config';\r\n\r\nconst { DATABASE_NAME, DATABASE_VERSION, OBJECT_STORE_NAME } = CONFIG;\r\n\r\nconst dbPromise = openDB(DATABASE_NAME, DATABASE_VERSION, {\r\n  upgrade(database) {\r\n    database.createObjectStore(OBJECT_STORE_NAME, { keyPath: 'id' });\r\n  },\r\n});\r\n\r\nconst LikedRestaurantIdb = {\r\n  async getRestaurant(id) {\r\n    if (!id) {\r\n      return;\r\n    }\r\n\r\n    return (await dbPromise).get(OBJECT_STORE_NAME, id);\r\n  },\r\n  async getAllRestaurants() {\r\n    return (await dbPromise).getAll(OBJECT_STORE_NAME);\r\n  },\r\n  async putRestaurant(restaurant) {\r\n    // eslint-disable-next-line no-prototype-builtins\r\n    if (!restaurant.hasOwnProperty('id')) {\r\n      return;\r\n    }\r\n\r\n    return (await dbPromise).put(OBJECT_STORE_NAME, restaurant);\r\n  },\r\n  async deleteRestaurant(id) {\r\n    return (await dbPromise).delete(OBJECT_STORE_NAME, id);\r\n  },\r\n};\r\n\r\nexport default LikedRestaurantIdb;\r\n","import CONFIG from './config';\r\n\r\nconst API_ENDPOINT = {\r\n  RESTAURANTS: `${CONFIG.BASE_URL}list`,\r\n  REVIEW: `${CONFIG.BASE_URL}review`,\r\n  DETAIL: (id) => `${CONFIG.BASE_URL}detail/${id}`,\r\n};\r\n\r\nexport default API_ENDPOINT;\r\n","import API_ENDPOINT from '../globals/api-endpoint';\r\n\r\nclass RestaurantApiSource {\r\n  static async restaurants() {\r\n    const response = await fetch(API_ENDPOINT.RESTAURANTS);\r\n    const responseJson = await response.json();\r\n    return responseJson.restaurants;\r\n  }\r\n\r\n  static async reviewRestaurant({ id, name, review }) {\r\n    try {\r\n      const response = await fetch(API_ENDPOINT.REVIEW, {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({ id, name, review }),\r\n      });\r\n      const responseJson = await response.json();\r\n      return responseJson;\r\n    } catch (error) {\r\n      if (error instanceof TypeError) {\r\n        return 'Make sure you\\'re connected to the internet!';\r\n      }\r\n      return error;\r\n    }\r\n  }\r\n\r\n  static async detailRestaurant(id) {\r\n    try {\r\n      const response = await fetch(API_ENDPOINT.DETAIL(id), { cache: 'no-cache' });\r\n      const responseJson = await response.json();\r\n      return responseJson;\r\n    } catch (error) {\r\n      if (error instanceof TypeError) {\r\n        return 'Make sure you\\'re connected to the internet!';\r\n      }\r\n      return error;\r\n    }\r\n  }\r\n}\r\n\r\nexport default RestaurantApiSource;\r\n","const CONFIG = {\r\n  BASE_URL: 'https://restaurant-api.dicoding.dev/',\r\n  BASE_IMAGE_URL_SMALL: 'https://restaurant-api.dicoding.dev/images/small/',\r\n  BASE_IMAGE_URL_MEDIUM: 'https://restaurant-api.dicoding.dev/images/medium/',\r\n  BASE_IMAGE_URL_LARGE: 'https://restaurant-api.dicoding.dev/images/large/',\r\n  DATABASE_NAME: 'my-restaurant-list-database',\r\n  DATABASE_VERSION: 1,\r\n  OBJECT_STORE_NAME: 'restaurants',\r\n};\r\n\r\nexport default CONFIG;\r\n","import * as WorkboxWindow from 'workbox-window';\r\n\r\nconst swRegister = async () => {\r\n  if (!('serviceWorker' in navigator)) {\r\n    console.log('Service Worker not supported in the browser');\r\n    return;\r\n  }\r\n\r\n  const wb = new WorkboxWindow.Workbox('./sw.bundle.js');\r\n\r\n  try {\r\n    await wb.register();\r\n    console.log('Service worker registered');\r\n  } catch (error) {\r\n    console.log('Failed to register service worker', error);\r\n  }\r\n};\r\n\r\nexport default swRegister;\r\n"],"names":["i","mainElement","this","_content","url","UrlParser","page","routes","render","innerHTML","afterRender","errorMessage","TypeError","errorTemplate","document","querySelector","addEventListener","event","preventDefault","focus","DATABASE_NAME","CONFIG","DATABASE_VERSION","OBJECT_STORE_NAME","dbPromise","openDB","upgrade","database","createObjectStore","keyPath","getRestaurant","id","get","getAllRestaurants","getAll","putRestaurant","restaurant","hasOwnProperty","put","deleteRestaurant","RESTAURANTS","REVIEW","DETAIL","fetch","API_ENDPOINT","response","json","responseJson","restaurants","name","review","method","headers","body","JSON","stringify","cache","BASE_URL","BASE_IMAGE_URL_SMALL","BASE_IMAGE_URL_MEDIUM","BASE_IMAGE_URL_LARGE","navigator","console","log","wb","WorkboxWindow","register"],"sourceRoot":""}